AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner (e.g., username or organization)

Resources:
  AWSCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSCodePipelineServiceRole-ap-southeast-1-NT548-lab2"
      Path: "/service-role/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      Policies:
        - PolicyName: "CodePipelineServicePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - iam:*
                  - secretsmanager:GetSecretValue
                  - logs:*
                Resource: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSCodeBuildServiceRole-NT548-lab2"
      Path: "/service-role/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: "CodeBuildService"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - iam:*
                  - secretsmanager:GetSecretValue
                  - logs:*
                  - ec2:*
                  - ecs:*
                  - eks:*
                  - lamda:*
                Resource: "*"

  Lab2CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: NT548-lab2
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec.yml"
        InsecureSsl: false
      Artifacts:
        Type: CODEPIPELINE
        Name: Lab2CodeBuild
      Environment:
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey:
        Fn::Sub: "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Tags: []

  CodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "cloudformation-bucket-22520969-nt548-lab2"
    Properties:
      VersioningConfiguration:
        Status: Suspended
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 1
            ExpiredObjectDeleteMarker: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      AccessControl: Private # Ensures that only the owner has full control.

  CodePipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodePipelineBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt AWSCodePipelineServiceRole.Arn
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${CodePipelineBucket}
              - !Sub arn:aws:s3:::${CodePipelineBucket}/*

  CloudFormationRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: "CloudformationRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: CodePipeline-NT548-lab2
      RoleArn: !GetAtt AWSCodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Branch: main
                Owner: !Ref GitHubOwner
                Repo: NT548.P21-Lab2-AWS
                PollForSourceChanges: "false"
                OAuthToken: "{{resolve:secretsmanager:GitHub/Token:SecretString}}"
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: NT548-lab2
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: NT548-lab2
                TemplatePath: SourceArtifact::CloudFormation/main.yml
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
